type Query {
    quote(id: ID!): Quote
    quotes(
        input: QuoteSearchInput
        sort: SortInput
        amount: Int!
        page: Int!
    ): [Quote]
    person(id: ID!): Person
    persons(name: String): [Person]
    validSession: Boolean
}

type Mutation {
    addQuote(input: QuoteInput!): Quote
    likeQuote(id: ID!, revert: Boolean): Int
    login(username: String!, password: String!): String
    register(username: String!, password: String!): Boolean
    logout: Boolean
}

type Quote {
    id: ID!
    text: String!
    date: String!
    likes: Int!
    saidBy: String!
    tags: [String]
    hasLiked: Boolean!
}

type Person {
    id: ID!
    name: String!
}

input QuoteInput {
    text: String!
    saidBy: String!
    date: String
    tags: [String]
}

input QuoteSearchInput {
    quote: String
    person: String
}

input SortInput {
    field: String!
    ascending: Boolean!
}
